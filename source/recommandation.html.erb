---
pageable: true
per_page: 10
layout: blank
---

<div class="container-fuid recommend">
	<div class="apropos">
	  <p class="headermsg">Merci de soutenir l'opération #yeswecrowd. Vos investissements et vos recommandations comptent beaucoup dans la réussite de ce projet. Nous vous invitons à répondre à cette courte question et à nous adresser une photo que nous pourrions utiliser sur le site www.yeswecrowd.co et les réseaux sociaux.</p>
		<div class="container">
			<div id="recommend">
			  <form id="reply" action="https://getsimpleform.com/messages?form_api_token=29cb9095771de77c3c54c4beb4845056" method="post" enctype="multipart/form-data">
			    <input type='hidden' name='redirect_to' value='http://yeswecrowd.co/merci' />
			    	
			    	<div class="form-group textarea">
			    		<textarea placeholder="Pourquoi soutenez vous NUMA ?" class="form-control" name="message" rows="3"></textarea>
						</div>
			      
			      <fieldset class="form-inline first">
				      <div class="form-group col-sm-4 first">
				        <label for="exampleInputEmail1" class="sr-only">Nom et Prenom</label>
				        <input type="text" name="name" class="form-control" id="exampleInputEmail1" placeholder="Prenom + Nom">
				      </div>
				      
				      <div class="form-group col-sm-4">
				         <label for="exampleInputPassword1" class="sr-only">Twitter Account</label>
				        <input type="text" name="twitter" class="form-control" id="exampleInputPassword1" placeholder="@twitter">
				      </div>

				      <div class="form-group col-sm-4 custom-file-upload">
				        <label for="file" class="sr-only" >File: </label> 
				        <input type="file" name="avatar" id="file" name="myfiles[]" multiple />
				      </div>

			      </fieldset>
						
						<fieldset class="form-inline second">
				      <div class="checkbox col-sm-8">
				        <label><input name="recommend" value="yes" type="checkbox">J'autorise la diffusion de mon commentaire et ma photo *</label>
				      </div>
				      
				      <div class="col-sm-4 text-right">
				      	<button type="submit" class="btn btn-blue">Valider</button>
							</div>
						</fieldset>
			    </form>

			</div> <!-- #recommend -->
		</div>
		<!-- .container -->
	</div>
</div>

<p style="max-width:600px; padding: 20px 0 50px;" class="notice text-center center-block">* J'accepte la diffusion de mon commentaire et de ma photo sur le site YesWeCrowd.co et la publication d'un tweet du compte @numaparis avec citation d'une partie ou la totalité de mon commentaire.</p>

<script>
	//Reference: 
	//http://www.onextrapixel.com/2012/12/10/how-to-create-a-custom-file-input-with-jquery-css3-and-php/
	;(function($) {

			  // Browser supports HTML5 multiple file?
			  var multipleSupport = typeof $('<input/>')[0].multiple !== 'undefined',
			      isIE = /msie/i.test( navigator.userAgent );

			  $.fn.customFile = function() {

			    return this.each(function() {

			      var $file = $(this).addClass('custom-file-upload-hidden'), // the original file input
			          $wrap = $('<div class="file-upload-wrapper">'),
			          $input = $('<input type="text" class="file-upload-input form-control" />'),
			          // Button that will be used in non-IE browsers
			          $button = $('<button type="button" class="file-upload-button">Upload</button>'),
			          // Hack for IE
			          $label = $('<label class="file-upload-button" for="'+ $file[0].id +'">Select a File</label>');

			      // Hide by shifting to the left so we
			      // can still trigger events
			      $file.css({
			        position: 'absolute',
			        left: '-9999px'
			      });

			      $wrap.insertAfter( $file )
			        .append( $file, $input, ( isIE ? $label : $button ) );

			      // Prevent focus
			      $file.attr('tabIndex', -1);
			      $button.attr('tabIndex', -1);

			      $button.click(function () {
			        $file.focus().click(); // Open dialog
			      });

			      $file.change(function() {

			        var files = [], fileArr, filename;

			        // If multiple is supported then extract
			        // all filenames from the file array
			        if ( multipleSupport ) {
			          fileArr = $file[0].files;
			          for ( var i = 0, len = fileArr.length; i < len; i++ ) {
			            files.push( fileArr[i].name );
			          }
			          filename = files.join(', ');

			        // If not supported then just take the value
			        // and remove the path to just show the filename
			        } else {
			          filename = $file.val().split('\\').pop();
			        }

			        $input.val( filename ) // Set the value
			          .attr('title', filename) // Show filename in title tootlip
			          .focus(); // Regain focus

			      });

			      $input.on({
			        blur: function() { $file.trigger('blur'); },
			        keydown: function( e ) {
			          if ( e.which === 13 ) { // Enter
			            if ( !isIE ) { $file.trigger('click'); }
			          } else if ( e.which === 8 || e.which === 46 ) { // Backspace & Del
			            // On some browsers the value is read-only
			            // with this trick we remove the old input and add
			            // a clean clone with all the original events attached
			            $file.replaceWith( $file = $file.clone( true ) );
			            $file.trigger('change');
			            $input.val('');
			          } else if ( e.which === 9 ){ // TAB
			            return;
			          } else { // All other keys
			            return false;
			          }
			        }
			      });

			    });

			  };

			  // Old browser fallback
			  if ( !multipleSupport ) {
			    $( document ).on('change', 'input.customfile', function() {

			      var $this = $(this),
			          // Create a unique ID so we
			          // can attach the label to the input
			          uniqId = 'customfile_'+ (new Date()).getTime(),
			          $wrap = $this.parent(),

			          // Filter empty input
			          $inputs = $wrap.siblings().find('.file-upload-input')
			            .filter(function(){ return !this.value }),

			          $file = $('<input type="file" id="'+ uniqId +'" name="'+ $this.attr('name') +'"/>');

			      // 1ms timeout so it runs after all other events
			      // that modify the value have triggered
			      setTimeout(function() {
			        // Add a new input
			        if ( $this.val() ) {
			          // Check for empty fields to prevent
			          // creating new inputs when changing files
			          if ( !$inputs.length ) {
			            $wrap.after( $file );
			            $file.customFile();
			          }
			        // Remove and reorganize inputs
			        } else {
			          $inputs.parent().remove();
			          // Move the input so it's always last on the list
			          $wrap.appendTo( $wrap.parent() );
			          $wrap.find('input').focus();
			        }
			      }, 1);

			    });
			  }

	}(jQuery));

	$('input[type=file]').customFile();

</script>

